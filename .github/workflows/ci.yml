# a github action workflow file that runs the Runtests.ps1 file
name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.12'

      - name: Get version
        uses: bbonkr/get-version-action@v1
        id: get-version
        with:
          project: 'IsraelHiking.Web/package.json'

      - name: Set version code and string
        id: version-code
        env:
          MAJOR: ${{ steps.get-version.outputs.major }}
          MINOR: ${{ steps.get-version.outputs.minor }}
          PATCH: ${{ github.run_number }}
        run: |
          echo "version_code=$(($MAJOR * 10000 + $MINOR * 100 + $PATCH % 100))" >> $GITHUB_OUTPUT
          echo "version_string=$MAJOR.$MINOR.$(($PATCH % 100))" >> $GITHUB_OUTPUT
    outputs:
      version_code: ${{ steps.version-code.outputs.version_code }}
      version_string: ${{ steps.version-code.outputs.version_string }}

  android:
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.12'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Bump versions in gradle
        uses: chkfung/android-version-actions@v1.2.2
        with:
          gradlePath: IsraelHiking.Web/android/app/build.gradle
          versionCode: ${{ needs.version.outputs.version_code }}
          versionName: ${{ needs.version.outputs.version_string }}
      - name: Build UI
        run: |
          cd IsraelHiking.Web
          npm ci
          npm run build:mobile -- --no-progress
          npx cap sync android
      - name: Build Android
          cd IsraelHiking.Web/android
          ./gradlew :app:bundleRelease "-Pandroid.injected.signing.store.file=$WORKSPACE/IsraelHiking.Web/signing/IHM.jks" "-Pandroid.injected.signing.store.password=$STORE_PASSWORD" "-Pandroid.injected.signing.key.alias=ihmkey" "-Pandroid.injected.signing.key.password=$PASSWORD"
          #./gradlew --no-daemon bundleRelease    
        env:
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          PASSWORD: ${{ secrets.PASSWORD }}
          WORKSPACE: ${{ github.workspace }}
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android.aab
          path: IsraelHiking.Web/android/app/build/outputs/bundle/release/app-release.aab

  docker: 
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and push Docker image
        run: docker build . -t israelhikingmap/website:$VERSION --build-arg VERSION=$VERSION
        env:
          VERSION: ${{ needs.version.outputs.version_string }}

  ios:
    runs-on: macos-latest
    needs: version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.12'

      - name: setup-cocoapods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          podfile-path: IsraelHiking.Web/ios/App/Podfile.lock

      - name: Keychain setup
        run: |
          cd IsraelHiking.Web
          openssl aes-256-cbc -pbkdf2 -k $PASSWORD -in ./signing/appveyor.mobileprovision.enc -d -a -out ./signing/appveyor.mobileprovision
          openssl aes-256-cbc -pbkdf2 -k $PASSWORD -in ./signing/ihm-dist.cer.enc -d -a -out ./signing/ihm-dist.cer
          openssl aes-256-cbc -pbkdf2 -k $PASSWORD -in ./signing/ihm-dist.p12.enc -d -a -out ./signing/ihm-dist.p12
          security create-keychain -p appveyor ios-build.keychain
          security default-keychain -s ios-build.keychain
          security unlock-keychain -p appveyor ios-build.keychain
          security set-keychain-settings -t 3600 -l ~/Library/Keychains/ios-build.keychain
          security import ./signing/apple.cer -k ~/Library/Keychains/ios-build.keychain -T /usr/bin/codesign
          security import ./signing/ihm-dist.cer -k ~/Library/Keychains/ios-build.keychain -T /usr/bin/codesign
          security import ./signing/ihm-dist.p12 -k ~/Library/Keychains/ios-build.keychain -P $STORE_PASSWORD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k appveyor ~/Library/Keychains/ios-build.keychain > /dev/null
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp ./signing/appveyor.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          PASSWORD: ${{ secrets.PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      - name: Build UI
        run: |
          cd IsraelHiking.Web
          npm ci
          npm run build:mobile -- --no-progress
          npx cap sync ios
      - name: Bump version
        shell: pwsh
        run: |
          ./Scripts/SetPlistFileVersion.ps1
        env:
          VERSION: ${{ needs.version.outputs.version_string }}
      - name: Build iOS
        run: |
          cd IsraelHiking.Web/ios
          xcodebuild -workspace App/App.xcworkspace -scheme App -archivePath App.xcarchive -configuration Release -destination generic/platform=iOS archive -quiet
          echo "Exporting archive"
          xcodebuild -exportArchive -archivePath $PWD/build/App.xcarchive -exportOptionsPlist exportOptions.plist -exportPath $PWD/build


  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.12'

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0'

      - name: Run backend tests
        run: dotnet test Tests/IsraelHiking.API.Tests  --logger "junit;LogFilePath=test-result.xml" /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:Exclude="[IsraelHiking.Common]*"
      - name: Run frontend tests
        run: |
          cd IsraelHiking.Web
          npm ci
          npx ng lint
          npm run test-ci
      - name: Codecov upload
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./Tests/IsraelHiking.API.Tests/coverage.info,./IsraelHiking.Web/coverage/lcov.info
        env:
          CODECOV_TOKEN: fc1bea1d-f43a-437e-84d3-baef07be7454
      - name: Test Summary
        if: always()
        uses: test-summary/action@v2
        with:
          paths: |
            ./**/test-result.xml
            ./**/TESTS-*.xml
          
